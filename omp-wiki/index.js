(function(n,t,c,r){"use strict";async function m(i){const e=await(await fetch(`https://api.open.mp/docs/search?q=${i}`)).json();var o=`Got ${e.total} results, took ${e.took/1e3}ms.
`;return e.hits.forEach(function(a,l){l>=4||o.concat(`> \`\`\`Title: ${a.name}
> Description: ${a.desc}\`\`\`
> Link: https://open.mp/${a.url}`)}),o}let s=[],p=r.findByProps("sendMessage","receiveMessage");var d={onLoad:function(){t.logger.log("Registering commands..."),s=c.registerCommand({name:"ompinfo",displayName:"ompinfo",description:"Get information about function/callbacks from open.mp docs",displayDescription:"Get information about function/callbacks from open.mp docs",options:[{name:"term",displayName:"term",description:"The term you want to search from wiki",displayDescription:"The term you want to search from wiki",required:!0,type:3}],type:1,applicationId:"-1",inputType:1,execute:async function(i,e){const o=i[0].value;await p.sendMessage(e.channel.id,{content:await m(o)})}}),t.logger.log("Success registering /ompinfo commands.")},onUnload:function(){t.logger.log("Unload omp-wiki plugins."),s()}};return n.default=d,Object.defineProperty(n,"__esModule",{value:!0}),n})({},vendetta,vendetta.commands,vendetta.metro);
